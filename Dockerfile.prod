FROM node:18-alpine as base
RUN apk add --no-cache g++ make py3-pip libc6-compat
WORKDIR /app
COPY package*.json ./
EXPOSE 3000

ENV NODE_ENV=production
RUN npm install


FROM base as builder
WORKDIR /app

COPY . .
RUN npx prisma generate
RUN npx prisma migrate deploy
RUN npx prisma db push --accept-data-loss 
RUN npm run build

FROM base as production
WORKDIR /app

RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001
USER nextjs


COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/public ./public

# copy service account
COPY ./keys/gcloud-service-key.json /tmp/gcloud-service-key.json


# set up predictable worining directory
ENV HOME=/home/app
ENV APP_HOME=/home/app/academy
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# copy entrypoint-prod.sh
COPY /app/scripts/entrypoint.prod.sh $APP_HOME
RUN chmod u+x $APP_HOME/entrypoint.prod.sh

ENTRYPOINT ["/home/app/scripts/academy/entrypoint.prod.sh"]